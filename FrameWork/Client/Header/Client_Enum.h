#ifndef Enum_h__
#define Enum_h__

enum LOADINGID  {LOADING_FIRST, LOADING_LOBBY, LOADING_BOSSSTAGE, LOADING_2to2, LOADING_SHOOTINGSTAGE, LOADING_RUNGAME, LOADING_END };
//==========엔진으로 교체예정=======================
// 파티클 크리에이트할때 어떤거 할지 종류
enum PARTICLETYPE { PARTICLE_RADICAL, PARTICLE_LEAF, PARTICLE_END };
// 스테틱이펙트 크리에이트할때 어떤거 할지 종류
enum STATICEFFECT { STATIC_ATTACK, STATIC_TEST, STATIC_PLAYER, STATIC_BELATOS_THRUST, STATIC_BELATOS_SHOCKWAVE, STATIC_END };
// 다이나믹이펙트 크리에이트할때 어떤거 할지 종류
enum DYNAMICEFFECT { DYNAMIC_TEST, DYNAMIC_END };
// 텍스쳐이펙트 크리에이트할때 어떤거 할지 종류
enum TEXTUREEFFECT {
	// 시원
	TEXTURE_DUSTRUNSTOP,
	TEXTURE_FIRE,
	TEXTURE_FAN_TRIANGLE,
	TEXTURE_FAN_HALF,
	TEXTURE_FAN_BIG,
	TEXTURE_SPHERE_RED,
	TEXTURE_SPHERE_RED2,
	TEXTURE_READY_ULT,
	TEXTURE_RUN_DUST,
	TEXTURE_READY_ULT2,
	TEXTURE_READY_ULT3,
	TEXTURE_HIT_1,
	TEXTURE_HIT_2,
	TEXTURE_HIT_3,
	TEXTURE_HIT_4,
	TEXTURE_HIT_5,
	TEXTURE_HIT_6,
	TEXTURE_SPHERE_GOLD,
	TEXTURE_SPHERE_GOLD2,
	TEXTURE_ALPHA,
	TEXTURE_RUNGAME_TELEPORT,
	TEXTURE_RUNGAME_ITEM_LOOT,
	TEXTURE_RUNGAME_HIT,
	TEXTURE_RUNGAME_BIG_EFFECT,
	TEXTURE_TRANS_APOSTLE,
	TEXTURE_25,
	TEXTURE_26,
	TEXTURE_27,
	TEXTURE_28,
	TEXTURE_29,
	TEXTURE_30,
	TEXTURE_31,
	TEXTURE_32,
	TEXTURE_33,
	TEXTURE_34,
	TEXTURE_35,
	TEXTURE_36,
	TEXTURE_37,
	TEXTURE_38,
	TEXTURE_39,
	// 아래부터 희정
	TEXTURE_TS_SMOKE0, //40
	TEXTURE_TS_SMOKE1, //41
	TEXTURE_WEAPONCHANGE_DS, //42
	TEXTURE_WEAPONCHANGE_TS, //43
	TEXTURE_WEAPONCHANGE_ORB, //44
	TEXTURE_WEAPONCHANGE_LB, //45
	TEXTURE_46,
	TEXTURE_47,
	TEXTURE_48,
	TEXTURE_49,
	TEXTURE_50,
	TEXTURE_51,
	TEXTURE_52,
	TEXTURE_53,
	TEXTURE_54,
	TEXTURE_55,
	TEXTURE_56,
	TEXTURE_57,
	TEXTURE_58,
	TEXTURE_59,
	TEXTURE_60,
	TEXTURE_61,
	TEXTURE_62,
	TEXTURE_63,
	TEXTURE_64,
	TEXTURE_65,
	TEXTURE_66,
	TEXTURE_67,
	TEXTURE_68,
	TEXTURE_69,
	// 아래부터 인균
	TEXTURE_RAINARROWHIT,//화살이 땅에 닿으면 튀는 이펙트
	TEXTURE_ORB1, // 오브 파츠1
	TEXTURE_ORB2, // 오브 파츠2
	TEXTURE_ORB3, // 오브 파츠3
	TEXTURE_ORB_ULT_SWIRL, //오브
	TEXTURE_FLARE_BLINK, // 오브 플레어 아틀라스
	TEXTURE_BLINK, 
	TEXTURE_ORB_FLARE, //오브 플레어1
	TEXTURE_ORB_FLARE2, 
	TEXTURE_ORB_FLARE3,
	// 아래부터 영준
	TEXTURE_80,
	TEXTURE_81,
	TEXTURE_82,
	TEXTURE_83,
	TEXTURE_84,
	TEXTURE_85,
	TEXTURE_86,
	TEXTURE_87,
	TEXTURE_88,
	TEXTURE_89,
	// 아래부터 용호
	TEXTURE_90,
	TEXTURE_91,
	TEXTURE_92,
	TEXTURE_93,
	TEXTURE_94,
	TEXTURE_95,
	TEXTURE_96,
	TEXTURE_97,
	TEXTURE_98,
	TEXTURE_99,
	TEXTURE_100,
	//다시 인균
	TEXTURE_BLINK_SINGLE,
	TEXTURE_ORB_FLARE4,
	TEXTURE_ORB_ULT_GROUND,
	TEXTURE_ORB_FLARE5,
	TEXTURE_ORB_HIT_GROUND,
	TEXTURE_ORB_E_START, //오브 E 쓰면 ->딱히 안쓸듯
	TEXTURE_ORB_DUST, //오브 R 스킬쓰면 노랑색 먼지
	TEXTURE_ORB_R_BULLET, // 오브 R 스킬 빔
	TEXTURE_ORB_R_FLARE, 
	TEXTURE_ORBBIG1, //오브 큰거1
	TEXTURE_ORBBIG2, //오브 큰거2
	TEXTURE_ORBBIG3, //오브큰거3
	TEXTURE_ORB_DUST_LARGE_YELLOW, //오브 궁쓰면 가장 큰 노랑 먼지
	TEXTURE_ORB_RING,
	TEXTURE_ORBULT1, //오브 궁 3개
	TEXTURE_ORBULT2,
	TEXTURE_ORBULT3,
	TEXTURE_ORB_CREATOR1,
	TEXTURE_ORB_CREATOR2,
	TEXTURE_120,
	TEXTURE_121,
	TEXTURE_122,
	TEXTURE_123,
	TEXTURE_124,
	TEXTURE_END
};
enum SCALE { SCALE_X, SCALE_Y, SCALE_Z, SCALE_END };
//================================================
																							// PUSH는 스턴없이 밀치기
enum COLLISIONID { COLLISION_HIT, COLLISION_KNOCKDOWN, COLLISION_AIR_UP, COLLISION_AIR_DOWN, COLLISION_AIR_PUSH, COLLISION_END };
// 어떤 오브젝트인지
enum OBJID { OBJECT_PLAYER, OBJECT_ALLIANCE, OBJECT_ENEMY_1, OBJECT_ENEMY_2, OBJECT_MONSTER, OBJECT_EFFECT, OBJECT_END };
// Efect ID - 충돌에서 쓴다,이펙트 개수만큼 만든다.
enum EFFECTID {
	EFFECT_BELATOS_THRUST,
	EFFECT_BELATOS_SHOCKWAVE,
	EFFECT_BELATOS_ARROW,
	EFFECT_BELATOS_CIRCLE,
	EFFECT_BELATOS_SHIELDFRONT,
	EFFECT_BELATOS_CIRCLE2,
	EFFECT_BELATOS_CIRCLE3,
	EFFECT_BELATOS_HEMISPHERE,
	EFFECT_BELATOS_HEMISPHERE2,
	EFFECT_BELATOS_ATTACK,
	EFFECT_BELATOS_SWEEP,
	EFFECT_BELATOS_JUMPLIGHT,
	EFFECT_BELATOS_THRUST2,
	EFFECT_BELATOS_HEMISPHERE3,
	EFFECT_BELATOS_SHOCKWAVE_LAY,
	EFFECT_BELATOS_SHOCKWAVE_LAY2,
	EFFECT_BELATOS_SHOCKWAVE_LAY3,
	EFFECT_BELATOS_SHOCKWAVE2,
	EFFECT_BELATOS_MISSILE,
	EFFECT_19,
	EFFECT_20,
	EFFECT_21,
	EFFECT_22,
	EFFECT_23,
	EFFECT_24,
	EFFECT_25,
	EFFECT_26,
	EFFECT_27,
	EFFECT_28,
	EFFECT_29,
	EFFECT_30,
	EFFECT_31,
	EFFECT_32,
	EFFECT_33,
	EFFECT_34,
	EFFECT_35,
	EFFECT_36,
	EFFECT_37,
	EFFECT_38,
	EFFECT_39,
	EFFECT_40,
	EFFECT_41,
	EFFECT_42,
	EFFECT_43,
	EFFECT_44,
	EFFECT_45,
	EFFECT_46,
	EFFECT_47,
	EFFECT_48_이름변경테스트,
	EFFECT_49_이름변경테스트,
	// 아래서부터 용호 사용
	EFFECT_BASICTRAIL1,
	EFFECT_BASICTRAIL2,
	EFFECT_BASICTRAIL3,
	EFFECT_BASICTRAIL4,
	EFFECT_BASICTRAIL5,
	EFFECT_BASICTRAIL6,
	EFFECT_BASICTRAIL7,
	EFFECT_BASICTRAIL8,
	EFFECT_AIRTRAIL1, //58
	EFFECT_AIRTRAIL2, //59
	EFFECT_AIRTRAIL3, //60
	EFFECT_AIRTRAIL4, //61
	EFFECT_AIRTRAIL5, //62
	EFFECT_AIRBULLET1,
	EFFECT_AIRBULLET2,
	EFFECT_SPEAR,
	EFFECT_SPEAR2,
	EFFECT_AIRUP,
	EFFECT_AIRUP2,
	EFFECT_FATETRAIL1,
	EFFECT_FATETRAIL2,
	EFFECT_FATETRAIL3,
	EFFECT_FATETRAIL4,
	EFFECT_FATETRAIL5,
	EFFECT_FATETRAIL6,
	EFFECT_FATETRAIL7,
	EFFECT_FATETRAIL8,
	EFFECT_FATETRAIL9,
	EFFECT_FATETRAIL10,
	EFFECT_FATE1,
	EFFECT_BLADE1,
	EFFECT_CROSS,
	EFFECT_BASICSP1,
	EFFECT_BASICSP2,
	EFFECT_BASICSP3,
	EFFECT_BASICSP4,
	EFFECT_BASICSP5,
	EFFECT_TEST,
	EFFECT_GENICIDE,
	EFFECT_89,
	EFFECT_90,
	EFFECT_91,
	EFFECT_92,
	EFFECT_93,
	EFFECT_94,
	EFFECT_95,
	EFFECT_96,
	EFFECT_97,
	EFFECT_98,
	EFFECT_99,
	EFFECT_100,
	// 아래부터 시원
	EFFECT_APOSTLE_SPHERE_1,
	EFFECT_APOSTLE_SPHERE_2,
	EFFECT_APOSTLE_SPHERE_3,
	EFFECT_APOSTLE_SPHERE_4,
	EFFECT_APOSTLE_LASER1,
	EFFECT_APOSTLE_SPHERE_5,
	EFFECT_APOSTLE_FAN_TRIANGIE,
	EFFECT_APOSTLE_FAN_HALF,
	EFFECT_APOSTLE_FAN_BIG,
	EFFECT_APOSTLE_TRAIL1,
	EFFECT_APOSTLE_LIGHT,
	EFFECT_APOSTLE_LIGHT2,
	EFFECT_APOSTLE_DOME_HALF,
	EFFECT_APOSTLE_LIGHT_DOT,
	EFFECT_APOSTLE_LIGHT2_DOT,
	EFFECT_116,
	EFFECT_117,
	EFFECT_118,
	EFFECT_119,
	EFFECT_120,
	EFFECT_121,
	EFFECT_122,
	EFFECT_123,
	EFFECT_124,
	EFFECT_125,
	EFFECT_126,
	EFFECT_127,
	EFFECT_128,
	EFFECT_129,
	EFFECT_130,
	EFFECT_131,
	EFFECT_132,
	EFFECT_133,
	EFFECT_134,
	EFFECT_135,
	EFFECT_136,
	EFFECT_137,
	EFFECT_138,
	EFFECT_139,
	EFFECT_140,
	EFFECT_141,
	EFFECT_142,
	EFFECT_143,
	EFFECT_144,
	EFFECT_145,
	EFFECT_146,
	EFFECT_147,
	EFFECT_148,
	EFFECT_149,
	EFFECT_150,
	// 아래부터 희정
	EFFECT_TS_LB, //151 오른쪽방향(0.4)
	EFFECT_TS_LB_SECOND, //152 동그라미
	EFFECT_TS_AIRLB_SECOND, //153  왼쪽방향
	EFFECT_TS_LB_THIRD1, //154 동그라미 세로로
	EFFECT_TS_LB_THIRD2, //155  151번보다 큰 사이즈(0.7)
	EFFECT_TS_AIRLB_THIRD, //156 공중-3타때 빙글할때
	EFFECT_TS_AIRLB_FOURTH, //157 공중-4타 내려찍기
	EFFECT_TS_RIGHT_MIN, //158 오른쪽키-돌맹이(아래)     :다이나믹매쉬
	EFFECT_TS_RIGHT_MID, //159  오른쪽키-돌맹이 (위)     :다이나믹매쉬
	EFFECT_160,
	EFFECT_TS_LB_PRESSING, //161 왼쪽버튼 꾹 동그라미
	EFFECT_TS_LB_PRESSING2, //162  161다음에나오는 왼쪽, 153보다 더 누워져있음 
	EFFECT_TS_LB_AIRUP, //163 공중띄우기 오른쪽버튼단계  동그라미 세로로(154보다 더 일자)
	EFFECT_TS_E_FIRST, //164 E 스킬-오(죽는속도 0.35)
	EFFECT_TS_E_SECOND, //165 E 스킬-왼(죽는속도 0.35)
	EFFECT_TS_E_THIRD, //166 E 스킬-오(죽는속도 0.2)
	EFFECT_TS_E_FOURTH, //167 E 스킬-왼(죽는속도 0.2)
	EFFECT_TS_R1, //168 R 스킬 - 돌맹이 1종 (enum- 174,175,176)
	EFFECT_TS_F, //169 F 스킬 - 돌맹이 길 3줄 :다이나믹매쉬
	EFFECT_TS_F_ROCK, //170 F 스킬 - 주변 돌맹이
	EFFECT_TS_F_ROCKBROKEN, //171 :다이나믹매쉬
	EFFECT_TS_AIRROCK_MIN, //172 공중- 4타(내려찍기) 후 나오는 돌맹이(아래)     :다이나믹매쉬
	EFFECT_TS_AIRROCK_MID, //173 공중- 4타(내려찍기) 후 나오는 돌맹이 (위)     :다이나믹매쉬
	EFFECT_TS_R2, //174 R 스킬 - 돌맹이 1종
	EFFECT_TS_R3, //175 R 스킬 - 돌맹이 1종
	EFFECT_TS_R4, //176 R 스킬 - 돌맹이 1종
	EFFECT_TS_LB_SECOND_ULTIMATE, //177 ) 152번보다 큰 사이즈()
	EFFECT_TS_AIRLB_SECOND_ULTIMATE, //178 ) 153번보다 큰 사이즈()
	EFFECT_TS_LB_THIRD1_ULTIMATE, //179 ) 154번보다 큰 사이즈()
	EFFECT_TS_LB_THIRD2_ULTIMATE, //180 ) 155번보다 큰 사이즈()
	EFFECT_TS_AIRLB_THIRD_ULTIMATE, //181 ) 156번보다 큰 사이즈()
	EFFECT_TS_AIRLB_FOURTH_ULTIMATE, //182 ) 157번보다 큰 사이즈()
	EFFECT_TS_LB_PRESSING_ULTIMATE, //183 ) 161번보다 큰 사이즈()
	EFFECT_TS_LB_PRESSING2_ULTIMATE, //184 ) 162번보다 큰 사이즈()
	EFFECT_TS_LB_AIRUP_ULTIMATE, //185 ) 163번보다 큰 사이즈()
	EFFECT_TS_E_FIRST_ULTIMATE, //186 ) 164번보다 큰 사이즈()
	EFFECT_TS_E_SECOND_ULTIMATE, //187 ) 165번보다 큰 사이즈()
	EFFECT_TS_E_THIRD_ULTIMATE, //188 ) 166번보다 큰 사이즈()
	EFFECT_TS_E_FOURTH_ULTIMATE, //189 ) 167번보다 큰 사이즈()
	EFFECT_TS_LB_ULTIMATE, //190 ) 151번보다 큰 사이즈()
	EFFECT_TS_LAY, //191 빔
	EFFECT_192,
	EFFECT_193,
	EFFECT_194,
	EFFECT_195,
	EFFECT_196,
	EFFECT_197,
	EFFECT_198,
	EFFECT_199,
	// 아래부터 인균
	EFFECT_200,
	EFFECT_WIND_DUST, // 
	EFFECT_BOW_RING,
	EFFECT_DUST,
	EFFECT_ARROW_AURA,
	EFFECT_PHOENIX_WIND1,
	EFFECT_PHOENIX_WIND2,
	EFFECT_PHOENIX_WIND3,
	EFFECT_ORB_TRAIL,
	EFFECT_ORB_TRAIL2,
	EFFECT_ORB_WIND,
	EFFECT_FIREBALL_WIND,
	EFFECT_ORB_WIND2,
	EFFECT_ORB_BEAM,
	EFFECT_ORB_R_PRE,
	EFFECT_ORB_WIND3,
	EFFECT_ORB_WIND4,
	EFFECT_ORB_ULT_WIND,
	EFFECT_ARROW,
	EFFECT_ORB,
	EFFECT_PHOENIX,
	EFFECT_ORB_R_BIG,
	EFFECT_ORB_ULT_BIG,
	EFFECT_ORB_FLARE_BOMB,
	EFFECT_224,
	EFFECT_225,
	EFFECT_226,
	EFFECT_227,
	EFFECT_228,
	EFFECT_229,
	EFFECT_230,
	EFFECT_231,
	EFFECT_232,
	EFFECT_233,
	EFFECT_234,
	EFFECT_235,
	EFFECT_236,
	EFFECT_237,
	EFFECT_238,
	EFFECT_239,
	EFFECT_240,
	EFFECT_241,
	EFFECT_242,
	EFFECT_243,
	EFFECT_244,
	EFFECT_245,
	EFFECT_246,
	EFFECT_247,
	EFFECT_248,
	EFFECT_249,
	EFFECT_250,
	EFFECT_251,
	EFFECT_252,
	EFFECT_253,
	EFFECT_254,
	EFFECT_255,
	EFFECT_256,
	EFFECT_257,
	EFFECT_258,
	EFFECT_259,
	EFFECT_END,
};

// 상태타입, AI에서 쓴다
enum STATETYPE {
	STATE_COMMON, STATE_HIT, STATE_KNOCKDOWN, STATE_BRAKE, STATE_AVOID, STATE_MOVE_TO_BACKWARD,
	STATE_ATTACK, STATE_SKILL, STATE_ULTIMATE, STATE_CC,
	//STATE_SHORTRANGE_ATTACK, STATE_SHORTRANGE_SKILL, STATE_SHORTRANGE_ULTIMATE, STATE_SHORTRANGE_CC,
	//STATE_LONGRANGE_ATTACK, STATE_LONGRANGE_SKILL, STATE_LONGRANGE_ULTIMATE, STATE_LONGRANGE_CC,
	STATE_AIR_, STATE_AIR_FALL, STATE_AIR_LANDING, STATE_AIR_DASH, STATE_AIR_SHORTRANGE_ATTACK, STATE_AIR_LONGRANGE_ATTACK,
	STATE_CAPTURE_FLAG,
	STATE_END
};

// base OBJ 충돌구체
enum COLLSPHERETYPE { SPHERE_FIRST, SPHERE_ATT, SPHERE_DEF, SPHERE_END };
// base OBJ 충돌박스
enum COLLBOXTYPE { BOX_ATT, BOX_DEF, BOX_END };
// 충돌매니저 리스트배열
enum COLLLIST { COLL_PLAYER, COLL_MONSTER, COLL_PLAYER_EFFECT, COLL_MONSTER_EFFECT, COLL_MONSTER_EFFECT_FAN, COLL_MONSTER_EFFECT_CAPSULE, COLL_END };
// 어떤충돌인지
enum COLLIDER { COLLIDER_ATT_HIT, COLLIDER_DEF_HIT, COLLIDER_END };
// 부채꼴이펙트
enum FANSHAPE { FAN_TRIANGLE, FAN_HALP, FAN_BIG, FAN_END };

// 플레이어 캐릭터의 조정타입
enum CONTROLTYPE { CTRL_PLAYER, CTRL_AI_ALLIANCE, CTRL_AI_ENERMY_1, CTRL_AI_ENERMY_2, CTRL_END };
enum AI_TYPE { AI_ALLIANCE, AI_ENERMY_1, AI_ENERMY_2, AI_END };
// 팀 구분
enum TEAM { TEAM_BLUE, TEAM_RED, TEAM_END };
//enum TEAM_BLUE { TB_USER, TB_ALLIANCE, TB_END };
//enum TEAM_RED { TR_ENERMY_1, TR_ENERMY_2, TR_END };

enum INPUT_KEY { KEY_W, KEY_A, KEY_S, KEY_D, KEY_Capture_Flag, KEY_SPACE, KEY_LB, KEY_RB, KEY_Q, KEY_E, KEY_R, KEY_F, KEY_SHIFT, KEY_END };

enum AI_SKILL { SKILL_Q, SKILL_E, SKILL_R, SKILL_F, SKILL_DASH, SKILL_END };

enum MATCHINGSTATE{COMMON, WAIT, SUCCESS_1, SUCCESS_2, FAIL, WIN, LOSE, MATCHINGSTATE_END}; // 짝맞추기-> 희정

enum RUNPLAYERMOVESTATE { MOVESTATE_WAIT, MOVESTATE_RUN, MOVESTATE_FALL, MOVESTATE_DOWN, MOVESTATE_FINISH, MOVESTATE_END };	// RunPlayer 상태
enum LINETYPE { LINE_BOTTOM_LEFT, LINE_BOTTOM_MID, LINE_BOTTOM_RIGHT, LINE_WALL_RIGHT_MID, LINE_WALL_LEFT_MID, LINE_TOP_MID, LINE_END };	// 런게임 라인
enum RUNGAMEOBJECT_COLL { OBJ_COLL_RUN, OBJ_COLL_JUMP, OBJ_COLL_All, OBJ_COLL_END };

enum RUN_LINE_SECT { SECT_1, SECT_2, SECT_3, SECT_END };

enum SELECTKARMATYPE { SELECTKARMATYPE_FORBASIC, SELECTKARMATYPE_FORSWAP, SELECTKARMATYPE_FORRESULT, SELECTKARMATYPE_END}; //무기 고르기를 위해 종류나눔(딴데서도쓰니까) -> 희정

enum RUNPLAYER_POWER { RUN_POWER_NORMAL, RUN_POWER_BIG, RUN_POWER_SPEEDUP, RUN_POWER_END };
enum RUNGAME_ITEMTYPE { RUNITEM_MONEY, RUNITEM_JEWELRY_BLUE, RUNITEM_POTION, RUNITEM_POWER, RUNITEM_SPEED, RUNITEM_END };
#endif // Enum_h__
